Service:
  RegionId: cn-hangzhou
  DeployType: ros
  DeployMetadata:
    ServiceInstanceNameRule:
      Prefix: asktable-
    SupplierDeployMetadata:
      ArtifactRelation:
        centos_7:
          ArtifactId: ${Artifact.EcsImage.ArtifactId}
          ArtifactVersion: ${Artifact.EcsImage.ArtifactVersion}
    TemplateConfigs:
      - Name: 单机版
        Url: ros_templates/template.yaml
        AllowedRegions:
          - cn-beijing
          - cn-hangzhou
          - cn-heyuan
    ServiceInstanceNameRule:
      Prefix: asktable-
      UseDefaultValue: false
  ServiceType: private
  ServiceInfo:
    - Agreements: []
      Image: resources/icons/service_logo.png
      Locale: zh-CN
      Name: AskStable社区版
      ShortDescription: AskTable 是一款专为企业设计的智能对话机器人，能够快速集成到现有系统，理解自然语言查询，提供精准的业务数据和自动化任务处理，大幅提升企业效率和客户满意度。
      Softwares: []
  ShareType: Public
  ApprovalType: Manual
Artifact:
  Artifact:
    ArtifactType: EcsImage
    ArtifactName: asktable
    Description: asktable
    ArtifactProperty:
      RegionId: ${ImageBuilder.EcsImage.RegionId}
      ImageId: ${ImageBuilder.EcsImage.SourceImageId}
ImageBuilder:
  EcsImage:
    RegionId: ap-southeast-1
    SourceImageId: ubuntu_24_04_x64_20G_alibase_20250317.vhd
    SystemDiskSize: 40
    InstanceType: ecs.c6.large
    InternetMaxBandwidthOut: 10
    CommandType: RunShellScript
    Timeout: 10800
    Tags: [ ]
    CommandContent: |-
        # 安装docker-ce
        apt-get update
        apt-get -y install apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL http://mirrors.cloud.aliyuncs.com/docker-ce/linux/ubuntu/gpg | apt-key add -
        add-apt-repository -y "deb [arch=$(dpkg --print-architecture)] http://mirrors.cloud.aliyuncs.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable"
        apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        sudo systemctl enable --now docker.service

        mkdir /root/asktable &&cd /root/asktable

        cat > /root/asktable/docker-compose.yml << "EOF"
        services:
          asktable:
            # AskTable
            image: registry.cn-shanghai.aliyuncs.com/datamini/asktable-all-in-one:latest
            container_name: asktable
            depends_on:
              - asktable_mysql
            ports:
              - 8000:80
            environment:
              TZ: Asia/Shanghai
              BASE_URL: http://127.0.0.1:8000
              LLM_API_KEY: ${LLM_API_KEY}
              MYSQL_HOST: asktable_mysql
              MYSQL_USER: asktable
              MYSQL_PASSWORD: asktable
              MYSQL_DB: asktable
            volumes:
              - ./asktable_data:/asktable
            healthcheck:
              test: ["CMD", "curl", "--fail", "http://localhost:80/health"]
              interval: 10s
              timeout: 10s
              retries: 10

          asktable_mysql:
            image: registry.cn-shanghai.aliyuncs.com/dminfra/mysql:8.0.27
            # image: mysql:8.0.27   # 其他地区
            container_name: asktable_mysql
            ports:
              - "3306:3306"
            environment:
              TZ: Asia/Shanghai
              MYSQL_ROOT_PASSWORD: asktable
              MYSQL_DATABASE: asktable
              MYSQL_USER: asktable
              MYSQL_PASSWORD: asktable
            volumes:
              - ./mysql_data:/var/lib/mysql
        EOF
        docker compose up -d